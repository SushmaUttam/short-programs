//Given an unsorted array A of size N that contains only positive integers, find a continuous sub-array that adds to a given number S and return the left and right index(1-based indexing) of that subarray.

// const N = 42, S = 468,
// A = [135, 101, 170, 125, 79, 159, 163, 65, 106, 146, 82,
// 28, 162, 92, 196, 143, 28, 37, 192, 5, 103, 154, 93, 183,
// 22, 117, 119, 96, 48, 127, 172, 139, 70, 113, 68, 100,
// 36, 95, 104, 12, 123, 134];
/* Output: 38 42 */

const N = 5, S = 12,
A = [1, 2, 3, 7, 5];
/* Output: 2 4 */

let sum = A[0];
let left = 0, right = 0;
for (let i=1; i<=N; i++) {
	while (sum > S && left < i-1) {
    sum = sum - A[left];
    left++;
  }
  if (sum == S) {
  	break;
  }
  if (i < N) {
    sum = sum + A[i];
    right = i;
  }
}

console.log(left+1, right+1)
console.log(A[left], A[right])
